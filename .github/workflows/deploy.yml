name: Deploy to Elastic Beanstalk with ECR

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

      - name: Create ECR repository if not exists
        run: |
          aws ecr describe-repositories --repository-names my-backend || aws ecr create-repository --repository-name my-backend


      - name: Build and push Docker image
        run: |
          docker build -t my-backend ./backend
          docker tag my-backend ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/my-backend:latest
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/my-backend:latest

      - name: Generate Dockerrun.aws.json
        run: |
          echo '{
            "AWSEBDockerrunVersion": "1",
            "Image": {
              "Name": "${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/my-backend:latest",
              "Update": "true"
            },
            "Ports": [
              {
                "ContainerPort": "8080"
              }
            ],
            "Logging": "/var/log/nginx"
          }' > Dockerrun.aws.json

      - name: Upload Dockerrun.aws.json to S3
        run: |
          aws s3 cp Dockerrun.aws.json s3://elasticbeanstalk-${{ secrets.AWS_REGION }}-${{ secrets.AWS_ACCOUNT_ID }}/iroha/Dockerrun.aws.json


      - name: Deploy to Elastic Beanstalk
        run: |
          aws elasticbeanstalk create-application-version --application-name iroha \
            --version-label "v-${{ github.run_number }}" \
            --source-bundle S3Bucket="elasticbeanstalk-${{ secrets.AWS_REGION }}-${{ secrets.AWS_ACCOUNT_ID }}",S3Key="iroha/Dockerrun.aws.json"

          aws elasticbeanstalk update-environment --application-name iroha \
            --environment-name Iroha-env-1 \
            --version-label "v-${{ github.run_number }}"
